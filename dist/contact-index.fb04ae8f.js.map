{"version":3,"sources":["src/contact-nav.js","src/contact.js","src/contact-index.js"],"names":["body","document","getElementsByClassName","exports","nav","navMenu","navLinks","navIcons","header","navToggler","addEventListener","classList","toggle","window","scrollTo","btn","querySelector","btnBody","inputName","inputEmail","inputMessage","inputErrorName","inputErrorEmail","inputErrorMsg","contactHeader","contactInput","querySelectorAll","textContact","contact","event","preventDefault","checkFormValidity","contains","contactInterval","setInterval","value","trim","add","remove","textContent","isValidEmail","email","test","length","clearInterval","startReload","params","URLSearchParams","set","url","concat","location","pathname","toString","replace","search","get","forEach","input","_contactNav","require","_contact"],"mappings":"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","file":"contact-index.fb04ae8f.js","sourceRoot":"..","sourcesContent":["export const body = document.getElementsByClassName('body')[0];\r\nexport const nav = document.getElementsByClassName('nav')[0];\r\nexport const navMenu = document.getElementsByClassName('nav-menu')[0];\r\nexport const navLinks =  document.getElementsByClassName('nav-links-body')[0];\r\nexport const navIcons =  document.getElementsByClassName('nav-icons-body')[0];\r\nexport const header = document.getElementsByClassName('header')[0];\r\n\r\nexport function navToggler() {\r\nnavMenu.addEventListener('click',function (){\r\n   navLinks.classList.toggle('navActive');\r\n   navIcons.classList.toggle('navActive');\r\n   navMenu.classList.toggle('menuActive');\r\n   nav.classList.toggle('navMenuActive');\r\n   body.classList.toggle('navBodyActive');\r\n   window.scrollTo (0, 0);\r\n   header.classList.toggle('headerNavActive');\r\n});\r\n}\r\n\r\nnavToggler();","export let btn = document.querySelector('.btn-contact');\r\nexport let btnBody =document.querySelector('.contact-btn-body');\r\nexport let inputName = document.querySelector('.contact-input-1');\r\nexport let inputEmail = document.querySelector('.contact-input-2');\r\nexport let inputMessage = document.querySelector('.contact-input-3');\r\nexport let inputErrorName = document.querySelector('.contact-error-1');\r\nexport let inputErrorEmail = document.querySelector('.contact-error-2');\r\nexport let inputErrorMsg = document.querySelector('.contact-error-3');\r\nexport let contactHeader = document.querySelector('.contact-header-1');\r\nexport let contactInput = document.querySelectorAll('.contact-input');\r\nexport let textContact = document.querySelector('.text-contact');\r\n\r\nexport function contact() {\r\nbtn.addEventListener('click', () =>{\r\n    event.preventDefault();\r\n    checkFormValidity();\r\n\r\n    if(!btn.classList.contains('activeBtn')) {\r\n    contactInterval = setInterval(() => {\r\n        if (inputName.value.trim() === '') {\r\n            inputErrorName.classList.add('contactError');\r\n            inputErrorName.classList.add('contactErrorActive');\r\n            inputName.classList.add('contactInputActive');\r\n        }\r\n            \r\n        else {\r\n            inputErrorName.classList.remove('contactError');\r\n            inputErrorName.classList.remove('contactErrorActive');\r\n            inputName.classList.remove('contactInputActive');\r\n        }\r\n    \r\n        if (inputEmail.value.trim() === ''){\r\n            inputErrorEmail.textContent = 'This field is required';\r\n            inputErrorEmail.classList.add('contactError');\r\n            inputErrorEmail.classList.add('contactErrorActive');\r\n            inputEmail.classList.add('contactInputActive');\r\n        }\r\n    \r\n        else if (!isValidEmail(inputEmail.value.trim())){\r\n            inputErrorEmail.textContent = 'Please enter a valid email address.';\r\n            inputErrorEmail.classList.add('contactError');\r\n            inputErrorEmail.classList.add('contactErrorActive');\r\n            inputEmail.classList.add('contactInputActive');\r\n        }\r\n    \r\n        else {\r\n            inputErrorEmail.classList.remove('contactError');\r\n            inputErrorEmail.classList.remove('contactErrorActive');\r\n            inputEmail.classList.remove('contactInputActive');\r\n        }\r\n\r\n        if (inputMessage.value.trim() === '') {\r\n            inputErrorMsg.classList.add('contactError');\r\n            inputErrorMsg.classList.add('contactErrorActive');\r\n            inputMessage.classList.add('contactInputActive');\r\n        }\r\n        \r\n        else {\r\n            inputErrorMsg.classList.remove('contactError');\r\n            inputErrorMsg.classList.remove('contactErrorActive');\r\n            inputMessage.classList.remove('contactInputActive');\r\n        }\r\n      }, 100);\r\n    }\r\n});\r\n}\r\n\r\ncontact();\r\n\r\nexport function isValidEmail(email) {\r\n    const regex = /^\\S+@\\S+\\.\\S+$/;\r\n    return regex.test(email);\r\n}\r\n\r\nexport function checkFormValidity() {\r\n    if ((inputName.value.trim().length >= 1) && (inputEmail.value.trim().length >= 1) && (inputMessage.value.trim().length >= 1) &&\r\n        !inputErrorName.classList.contains('contactErrorActive') && !inputName.classList.contains('contactInputActive') &&\r\n        !inputErrorEmail.classList.contains('contactErrorActive') && !inputEmail.classList.contains('contactInputActive') &&\r\n        !inputErrorMsg.classList.contains('contactErrorActive') && !inputMessage.classList.contains('contactInputActive') &&\r\n        (isValidEmail(inputEmail.value.trim()))){\r\n\r\n        btn.textContent = 'Sending...';\r\n        clearInterval('contactInterval');\r\n        btn.classList.add('btnActive');\r\n        startReload();\r\n    }\r\n}\r\n\r\nexport function startReload() {\r\n    const params = new URLSearchParams();\r\n    params.set('textContactActive', 'true');\r\n    params.set('inputActive', 'true');\r\n    params.set('btnActive', 'true')\r\n    const url = `${location.pathname}?${params.toString()}`;\r\n  \r\n    location.replace(url);\r\n  }\r\n\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const params = new URLSearchParams(location.search);\r\n\r\n    if (params.get('textContactActive') === 'true') {\r\n      textContact.classList.add('textContactActive');\r\n    }\r\n\r\n    if (params.get('inputActive') === 'true') {\r\n      contactInput.forEach(input => input.classList.add('inputActive'));\r\n    }\r\n\r\n    if (params.get('btnActive') === 'true') {\r\n        btnBody.classList.add('btnActive');\r\n    }\r\n});","import {body, nav, navMenu, navLinks, navIcons, header, navToggler} from './contact-nav.js';\r\nimport {\r\nbtn,\r\nbtnBody,\r\ninputName,\r\ninputEmail,\r\ninputMessage,\r\ninputErrorName,\r\ninputErrorEmail,\r\ninputErrorMsg,\r\ncontactHeader,\r\ncontactInput,\r\ntextContact,\r\ncontact,\r\nisValidEmail,\r\ncheckFormValidity,\r\nstartReload\r\n} from './contact.js'"]}